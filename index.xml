<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MotoShin Blog</title>
    <link>https://motoshin.github.io/</link>
    <description>Recent content on MotoShin Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 10 Nov 2020 20:58:37 +0900</lastBuildDate><atom:link href="https://motoshin.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DQNのお勉強中…</title>
      <link>https://motoshin.github.io/posts/2020-11-10-blog/</link>
      <pubDate>Tue, 10 Nov 2020 20:58:37 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-11-10-blog/</guid>
      <description>学生の頃ニューラルネットワーク(NN)を全力で避けていました。 そのため、もちろんNNを使った強化学習手法であるDQNも真面目にやったことはありませんでした。 「これはいかん！」と思い立ち今回勉強しようと思いました。 今回のブログはDQNはなんぞやという記事ではなく、実装してみて思ったことや気付いたことなどをただ書き殴るだけのメモ帳替りのものです。 なのでどんどん追記していくかもしれません。 また今度ちゃんとした解説記事書くから許せ…
リポジトリ DQNのチュートリアル
僕が頑張って実装したものです。 お納めください。 今のところ実装してあるタスクはopen ai gymが提供しているcartpoleという環境についてDQNを実装しました。 PyTorchの強化学習チュートリアルをコピペしたcartpole.pyと、自分なりにチュートリアルの内容をクラスなどに分けてプロジェクト化したcartpoleディレクトリを作りました。
結果 一応結果の画像を貼っておきます。 プログラム実行するととても時間がかかるので…
  rewardのグラフ   episode: 500, simulation: 20での結果です。 この結果出すのに2時間くらいかかりました（環境にもよると思いますが）。 ほんとはsimulationを100とか1000とかやりたいけどとんでもなく時間がかかりそう…
気付き 以下、気付きや思ったことをつらつらと書いていきます。
 NNって出力のargmax取るやつだったな〜  なぜかラベルの数値データ１つが出力するものだと認識してた。 強化学習ではどの行動を取るのかなので行動数分の出力になる   Batch Normalization  NNに画像を入力するときは必須らしい フィルターかけまくって偏ったデータを正規化するものって理解しているけどあっているかは微妙   あんまり成績が伸びない…  rewardは22くらいで伸びが止まっている 軽く調べるとみんな200くらいいっている 画像入力とベクトル入力の差かもしれないな、と考察してる   中間層の数とか入力数と出力数とかどうやって決めてるんや…  ここは職人芸ってよく聞くし数を重ねるしかないのかな〜   画像を入力にしているためウィンドウをレンダリングする必要がる  画面がないAWSとかの環境で回しっぱができない やはりベクトル入力がベストかな〜 なぜPyTorchのチュートリアルは画像入力なんだ…    参考  PyTorch 【GIF】初心者のためのCNNからバッチノーマライゼーションとその仲間たちまでの解説  </description>
    </item>
    
    <item>
      <title>いい感じのグラフ出力アプリ作った</title>
      <link>https://motoshin.github.io/posts/2020-10-28-blog/</link>
      <pubDate>Wed, 28 Oct 2020 21:53:17 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-28-blog/</guid>
      <description>めっちゃブログ更新さぼってました、大変申し訳ございませんでした…。 でも書くことなかったしちょっと忙しかったし仕方ないと思うんだ、うん。
てことで今回は少し技術ブログチックなことを書いていこうと思います。 pythonのmatplotlibでいい感じのグラフスタイルになるパッケージ？みたいなのがあるので紹介していきます。
SciencePlots SciencePlotsというやつです。 なんかmatplotlibのデフォルトの文字フォントって微妙なんですが、これだとちょっとかっこいい感じで文字出力してくれます。 あとはIEEEの論文スタイル用のグラフとかにもパラメータを指定することでできるようになるみたいです。 なのでこれを僕が普段グラフ出力のために使っているプログラムにも使ってみることにしましたのでご紹介します。
graph-creator なんのひねりもないリポジトリ名ですが、graph-creatorです。 これはcsvファイルをグラフにするアプリケーションです。
準備 まずは実行するのに必要なライブラリをpipなりなんなりでインストールしてください。 ライブラリは下記の通りです。
 numpy matplotlib pandas SciencePlots  あと一応実行環境を記載しておくと下記の通りです。 たぶん記載した環境でなくとも動くとは思います。
   os python version     macOS Catalina python 3.8.6   Ubuntu 20.04.1 LTS (Focal Fossa) python 3.8.3    実行 実行方法は下記のコマンドをプロジェクト直下で実行です。
$ python main.py そうすると対話モードでアプリケーションが立ち上がるので聞かれたことにこたえていきましょう。 一応書くとこんな感じ。
# 今はモード1しかないので1を入力 Please select a mode (1: 2-axis graph): 1 # グラフにしたいcsvファイルのプロジェクト直下からの相対パスか絶対パスを入力 Input a csv file path: example/example.</description>
    </item>
    
    <item>
      <title>いよいよ話題がなくなってきた</title>
      <link>https://motoshin.github.io/posts/2020-10-10-blog/</link>
      <pubDate>Sat, 10 Oct 2020 17:35:30 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-10-blog/</guid>
      <description>いよいよこのブログのセットアップ関係の話題がなくなってきて困っているMotoShinです。 そして普通に昨日ブログ更新サボってるんだよな〜。
今後の話題 このブログの方針を書いてなかったので改めて書いていこうと思います。 以下のようなトピックを扱っていていこうかな、と思ってます。
 強化学習関連 (tag名：ReinforcementLerning) 好きなゲーム関連 (tag名：Game) 参考書紹介 (tag名：Study) プログラミング系 (tag名：Program) 日記 (tag名：Diary)  こんな感じですかね〜、まぁだらだらやっていくのでこれ以外にも出てくるとは思いますが。 それぞれの項目について少し説明していきたいと思います。
強化学習関連 (tag名：ReinforcementLerning) まず前回のブログでも扱っていた強化学習関連の話題です。 前回のブログではいきなり強化学習の話題を扱ってしまって少し難しくなってしまったので今回は段階を踏みつつこの話題を扱っていきたいと考えています。 具体的には強化学習の前段の簡単な問題を扱っている「バンディット問題」から解説記事を書いていきたいな、と思っております。
好きなゲーム関連 (tag名：Game) これはただゲームのお話をだらだらしていこうと思います。 おもしろいゲームのおすすめや、ゲームの考察とかしていきたいなと考えています。 多分、ソウルシリーズ系になると思うけど・・・。
参考書紹介 (tag名：Study) 最近実は勉強しております。 メインは数学ですがこれからは英語とかも勉強していこうかな、と思っています。 学問的な部分以外でも技術的な面の勉強ももちろんしていこうと思います。 それらの中で「お、ええやん」と思った本を紹介していけてらなと思っています。
プログラミング系 (tag名：Program) そこまで頻繁にできるかはわかりませんが実際にコードを書いて技術的な発信ができればなと考えています。
日記 (tag名：Diary) 日記は日々の出来事とか愚痴とかつらつらと書いていこうかなと思っています。 まぁ書くことがなにもないときの苦し紛れのものになると思いますが・・・。
今日の一言 半沢直樹シーズン2一気見しながら書いてると全然筆が進まないな・・・</description>
    </item>
    
    <item>
      <title>数式の出力の仕方を解説していく</title>
      <link>https://motoshin.github.io/posts/2020-10-08-bolg/</link>
      <pubDate>Thu, 08 Oct 2020 20:16:46 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-08-bolg/</guid>
      <description>夜勤明けで死にそうなMotoShinです。 頭がくらくらするので今日は簡単に書けそうな話題でいこうと思います。
数式を出していくぅ！ 数式を出す準備 昨日出てきたblogプロジェクトのtreeコマンド結果です。
. ├── archetypes ├── config.toml ├── content │ └── posts ├── data ├── deploy.sh ├── layouts │ ├── _default │ │ └── baseof.html │ └── partials │ └── math.html ├── public ├── resources ├── static │ └── avatar.jpg └── themes └── m10c ./layouts/partials/math.htmlというファイルを作成します。 ./layouts/partials/math.htmlの中身は下記のようになります。
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css&amp;#34; integrity=&amp;#34;sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt; &amp;lt;script defer src=&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js&amp;#34; integrity=&amp;#34;sha384-g7c+Jr9ZivxKLnZTDUhnkOnsh30B4H0rpLUpJ4jAIKs4fnJI+sEnkvrMWph2EDg4&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script defer src=&amp;#34;https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js&amp;#34; integrity=&amp;#34;sha384-mll67QQFJfxn0IYznZYonOWZ644AWYC+Pt2cHqMaRhXVrursRwvLnLaebdGIlYNa&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34; onload=&amp;#34;renderMathInElement(document.body);&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, function() { renderMathInElement(document.body, {delimiters: [ {left: &amp;#34;$$&amp;#34;, right: &amp;#34;$$&amp;#34;, display: true}, {left: &amp;#34;$&amp;#34;, right: &amp;#34;$&amp;#34;, display: false}] }); }); &amp;lt;/script&amp;gt; これはKaTeXのAuto-renderExtensionを参考にして作成しました。 .</description>
    </item>
    
    <item>
      <title>画像を添付してみる</title>
      <link>https://motoshin.github.io/posts/2020-10-07-blog/</link>
      <pubDate>Wed, 07 Oct 2020 18:24:19 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-07-blog/</guid>
      <description>今回は一昨日のブログで書いていた画像の添付をしてみます。 昨日のブログで数式の挿入して満足したけどやり方とか書いた方が読者の人たち的にはいいのかな、 とか思ったので今日は画像添付のやり方書くとともに画像添付をしようと思います。 あと今日はいちいち改行せずブログ書いてみます。
画像添付のやり方 ブログのプロジェクト構造 まずは事前知識としてHugoのブログプロジェクトのディレクトリ構造の説明からします。
. ├── archetypes ├── config.toml ├── content │ └── posts ├── data ├── deploy.sh ├── layouts ├── public ├── resources ├── static │ └── avatar.jpg └── themes └── m10c まぁブログのディレクトリ構造はこんな感じになってるんですね。
まずブログ記事の作り方ですが下記コマンドを実行すると./content/posts/に新たにtest.mdが作成されます。
hugo new posts/test.md これに記事を書いて下記コマンドをdeploy.shを実行すると./public/直下に色々展開されます。 これが皆さんの見ているブログの画面を構築する元になっている感じですね。
画像添付していくぅ！ どうやらPege Bundleっていうのを使うみたい。
これを下のように書いて使うとこんな感じ。
![This is a image](test.jpg) 調べてみると他の方法もあったので試してみる。
Hugo内にはShrotcodeってやつがあるらしくそれを使うことでいけるらしい。 うまくエスケープできなかったから詳しくはここを見てくれ！ Shortcodes
  This is a image   画像サイズの調整は簡単にはできないらしい・・・。
今日のまとめ  画像の添付はできた 画像サイズ変更とかはもう少し調べないとダメそう  そんなところです。</description>
    </item>
    
    <item>
      <title>数式の挿入とかの練習</title>
      <link>https://motoshin.github.io/posts/2020-10-06-blog/</link>
      <pubDate>Tue, 06 Oct 2020 20:15:09 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-06-blog/</guid>
      <description>今日は昨日の記事にも書いた通り数式の挿入の練習をしようと思います。
こんな感じでこのブログに慣れるためにも、しばらくの間はしょうもない話題で毎日投稿していこうと思います。
数式の書き方 では、いきなり本題です。
数式書いてみます。
KaTeXってやつで数式描画してるみたいです。
これも色々勉強が必要そうだ・・・。
$$ f(x)= \sum_{k=0}^{\infty} \frac{ f^{(k)}(x_0)}{n!} \left( x-x_0 \right)^k $$
文中の数式 $y = f(x)$ のテスト。
お～、なかなかええやん。数式綺麗やん。
満足してしまったのと、結構時間かかってしまったので今日はここまでにしておこうと思います。
今日の一言 プロフ画像変えてみました。
川越で撮った謎のカメレオンです。</description>
    </item>
    
    <item>
      <title>ブログのテーマ選び難しい問題</title>
      <link>https://motoshin.github.io/posts/2020-10-05-blog/</link>
      <pubDate>Mon, 05 Oct 2020 18:35:59 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-05-blog/</guid>
      <description>ブログのテーマって皆さんどのように決めているんでしょうか？
難しくないですか、テーマ。
今の僕はHugoってやつ使ってブログ書いてるんですがそれのテーマ一覧がこれですよ。
https://themes.gohugo.io/
いや、ムズいわ
これ選ぶだけで一日潰れちゃうよ
てことで今日はブログのテーマについてだらだら書いていこうと思います。
ブログのテーマ選びの難しさ ブログのテーマって何がムズいって「これだ！」ってやつがあってウキウキで設定してみるとなんか違うな、
ってなるところだと思うんです。
なんなんでしょうね、あれ。
今設定してるテーマも「m10c」ってやつなんですけど、すごいシンプルでええやん！ってなったんですが
いざ設定してみるとうーんって感じになりました。
（テーマがイケてないという意味ではないです。全部いいテーマです。製作者さんマジリスペクト）
自分で作ればええやんって思うけど自分にそんなセンスはないんだよな～
ブログのテーマに欲しいもの なので僕がブログテーマに対して何を求めているのかを頭の整理もかねて書き出したいと思います。
欲しい機能は以下のような感じです。
 tag機能 コメント機能 数式をLatex風に書ける機能 いい感じにおしゃれなUI  こんな感じです。
僕が重視したいのが
 数式をLatex風に書ける機能
 です。
なんてったって技術ブログですからね()。
これが備わっていたのでこの「m10c」も選んでみました。
なんかいい感じに以下のページみたいに書けるらしいです。
https://themes.gohugo.io//theme/hugo-theme-m10c/post/math-typesetting/
（まだどうやるかはわかっていません。）
これらがいい感じに内蔵されてるテーマあったら教えてください、お願いします。
結論 今日のブログをまとめるとこんな感じです。
 ブログのテーマ作ってる人はすごい 不満があるなら自分で作れ  そんなところです。
次回 次回は、このテーマに慣れるために画像とか数式とか書いていこうと思います。</description>
    </item>
    
    <item>
      <title>ブログをGitHub Pagesに移行しました。</title>
      <link>https://motoshin.github.io/posts/2020-10-04-create-blog-1/</link>
      <pubDate>Sun, 04 Oct 2020 18:11:00 +0900</pubDate>
      
      <guid>https://motoshin.github.io/posts/2020-10-04-create-blog-1/</guid>
      <description>GitHub Pagesでブログ！？ 第一印象はこんな感じでした。
僕のGithub Pagesのイメージはほんとにhtmlのペライチしか表示できないと思っていたので結構驚きました。
移行した理由 移行した理由としては以下の理由があります。
 AWSの無料トライアル？期間みたいのが終わってた githubでの管理なのでやりやすそう なんかイケてそう  まぁ、こんか感じです。
 AWSの無料トライアル？期間みたいのが終わってた
 これはほんと驚きました。
今まで1500円とかだった料金が9月いきなり7000円越えとかになっていて急いで全部のインスタンスを消しました。
確認してほんとによかった・・・。
 githubでの管理なのでやりやすそう
 これは管理もそうですが、ブログの記事自体もmarkdownで記述できるという点もあります。
 なんかイケてそう
 なんかイケてそうだなって思いました（フィーリング）。
Hugoっていうやつがブログ生成しててgo言語使っててなんかイケてそう（）。
今後の方向性 とりあえずカスタムドメインとか使えそうなので前のブログのドメインを復活させようかな、とか思ってます。
あとは前のブログの記事復活できたらやります。（たぶんやらないかも）
今日はこんなところです。</description>
    </item>
    
  </channel>
</rss>
