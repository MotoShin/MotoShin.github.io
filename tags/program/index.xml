<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Program on MotoShin Blog</title>
    <link>https://motoshin.github.io/tags/program/</link>
    <description>Recent content in Program on MotoShin Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Nov 2020 20:58:37 +0900</lastBuildDate>
    <atom:link href="https://motoshin.github.io/tags/program/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DQNのお勉強中…</title>
      <link>https://motoshin.github.io/posts/2020-11-10-blog/</link>
      <pubDate>Tue, 10 Nov 2020 20:58:37 +0900</pubDate>
      <guid>https://motoshin.github.io/posts/2020-11-10-blog/</guid>
      <description>&lt;p&gt;学生の頃ニューラルネットワーク(NN)を全力で避けていました。&#xA;そのため、もちろんNNを使った強化学習手法であるDQNも真面目にやったことはありませんでした。&#xA;「これはいかん！」と思い立ち今回勉強しようと思いました。&#xA;今回のブログはDQNはなんぞやという記事ではなく、実装してみて思ったことや気付いたことなどをただ書き殴るだけのメモ帳替りのものです。&#xA;なのでどんどん追記していくかもしれません。&#xA;また今度ちゃんとした解説記事書くから許せ…&lt;/p&gt;&#xA;&lt;h3 id=&#34;リポジトリ&#34;&gt;リポジトリ&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MotoShin/dqn-tutorial&#34;&gt;DQNのチュートリアル&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;僕が頑張って実装したものです。&#xA;お納めください。&#xA;今のところ実装してあるタスクはopen ai gymが提供しているcartpoleという環境についてDQNを実装しました。&#xA;&lt;a href=&#34;https://pytorch.org/tutorials/intermediate/reinforcement_q_learning.html&#34;&gt;PyTorchの強化学習チュートリアル&lt;/a&gt;をコピペした&lt;code&gt;cartpole.py&lt;/code&gt;と、自分なりにチュートリアルの内容をクラスなどに分けてプロジェクト化した&lt;code&gt;cartpole&lt;/code&gt;ディレクトリを作りました。&lt;/p&gt;&#xA;&lt;h3 id=&#34;結果&#34;&gt;結果&lt;/h3&gt;&#xA;&lt;p&gt;一応結果の画像を貼っておきます。&#xA;プログラム実行するととても時間がかかるので…&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;img.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;rewardのグラフ&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;episode: 500, simulation: 20での結果です。&#xA;この結果出すのに2時間くらいかかりました（環境にもよると思いますが）。&#xA;ほんとはsimulationを100とか1000とかやりたいけどとんでもなく時間がかかりそう…&lt;/p&gt;&#xA;&lt;h3 id=&#34;気付き&#34;&gt;気付き&lt;/h3&gt;&#xA;&lt;p&gt;以下、気付きや思ったことをつらつらと書いていきます。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NNって出力のargmax取るやつだったな〜&#xA;&lt;ul&gt;&#xA;&lt;li&gt;なぜかラベルの数値データ１つが出力するものだと認識してた。&lt;/li&gt;&#xA;&lt;li&gt;強化学習ではどの行動を取るのかなので行動数分の出力になる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Batch Normalization&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NNに画像を入力するときは必須らしい&lt;/li&gt;&#xA;&lt;li&gt;フィルターかけまくって偏ったデータを正規化するものって理解しているけどあっているかは微妙&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;あんまり成績が伸びない…&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rewardは22くらいで伸びが止まっている&lt;/li&gt;&#xA;&lt;li&gt;軽く調べるとみんな200くらいいっている&lt;/li&gt;&#xA;&lt;li&gt;画像入力とベクトル入力の差かもしれないな、と考察してる&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;中間層の数とか入力数と出力数とかどうやって決めてるんや…&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ここは職人芸ってよく聞くし数を重ねるしかないのかな〜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;画像を入力にしているためウィンドウをレンダリングする必要がる&#xA;&lt;ul&gt;&#xA;&lt;li&gt;画面がないAWSとかの環境で回しっぱができない&lt;/li&gt;&#xA;&lt;li&gt;やはりベクトル入力がベストかな〜&lt;/li&gt;&#xA;&lt;li&gt;なぜPyTorchのチュートリアルは画像入力なんだ…&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://qiita.com/omiita/items/01855ff13cc6d3720ea4&#34;&gt;【GIF】初心者のためのCNNからバッチノーマライゼーションとその仲間たちまでの解説&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
